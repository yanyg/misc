* mount	--	mount a filesystem

* mount -t type dev dir
	Attach the filesystem found on device (which is of type type) at the directory dir. The previous contents (if any) and owner and mode of dir becom invisible. And as long as this filesystem remains mounted, the pathname dir refers to the root of the filesystem on device.

* mount dev dir
	Like as mount -t type dev dir, mount can recognize almost filesystem types.

* mount -h
	print help message of mount

* mount -V
	prints a version string

* mount -l [-t  type]
	lists all mounted filesystems (of type type). The option -l adds the lables in this listing.

* mount -a [-t type] [-o optlist]
	which usually given in a bootscript, causes all filesystems mentioned in fstab (of the proper type and/or having or not having the proper options) to be mounted as indicated, except for those whose line contains the noauto keyword. Adding the -F option will make mount fork,so that the filesystems are mounted simultaneously.
	When mounted a filesystem mentioned in fstab or mtab, it suffices to give only the device, or only the mount point.
	If you want to override mount options from /etc/fstab you have to use:
		mount device|dir -o optlists

* mount dev|dir
	given a line in fstab:
		/dev/cdrom  /cd  iso9660  ro,user,noauto,unhide
	non-root mount:
		mount /dev/cdrom or mount /cd

* mount --bind oldir newdir
	remount a filesystem.
	Same as mount -B olddir newdir
	One can also remount a single file (must be a directory)

* mount --rbind|-R olddir newdir
	r means recursive

* mount -o remount,ro newdir
	mount --bind|--rbind cannot change mount options, use this command to replace.

* mount --move olddir newdir

* Options
	-V
	-O, --test-opts opts	Used in conjuction with -a

* files
	/proc/partitions
	/proc/filesystems
