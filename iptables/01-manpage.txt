Description
  Iptables is used to set up, maintain, and inspect the tables of Ipv4 packet
  filter rules in the Linux kernel. Several different tables may be defined.
  Each table contains a number of built-in chains and may also contain
  user-defined chains.

  Each chain is a list of rules which can	match a set of packets. Each rule
  specifies what to do with a packet that matches. This is called a 'target',
  which may be a jump to a user-defined chain in the same table.

Targets
  A firewall rule specifies criteria for a packet and a target. If the packet
  does not match, the next rule in the chain is the examined; if it does match,
  then the next rule is specified by the value of target, which can be the name
  of a user-defined chain or one of the special values ACCEPT, DROP, QUEUE, or
  RETURN.

  ACCEPT means to let the packet through. DROP means to drop the packet on the
  floor. QUEUE means to pass the packet to userspace. (How the packet can be
  received by a userspace process differs by the particular queue handler. 2.4.x
  and 2.6.x kernels up to 2.6.13 include the ip_queue queue handler. Kernel 2.6.14
  and later additionally include the nfnetlink_queue queue handler. Packets with a
  target of QUEUE will be sent to queue number '0' in this case. Please also see
  the NFQUEUE target as described later in this manpage.) RETURN means stop
  traversing this chain and and resume at the next rule in the previous (calling)
  chain. If the end of a built-in chain is reached or a rule in a built-in chain
  with target RETURN is matched, the target specified by the chain policy determines
  the fate of the packet.

Tables
  There are currently three independent tables (which tables are represent at any
  time depends on the kernel configuration options and which modules are present.)

  -t,--table table
    This option specifies the packet matching table which the command should operate
    on. If the kernel configured with automatic module loading, an attempt will be
    made to load the appropriate module for that table if it is not already there.

  The table are as follows:
    filter:
      This is the default table (if no -t option is passed). It contains the
      built-in chains INPUT(for packets determined to local sockets), FORWARD (for
      packets being routed through the box), and OUTPUT(for locally-generated
      packets).
    nat:
      This table is consulted when a packet that creates a new connection is
      encountered. It consists of three built-ins: PREROUTING(for altering packets
      as soon as they come in), OUTPUT(for altering locally-generated packets before
      routing), and POSTROUTING(for altering packets as they are about to go out).
    mangle:
      This table is used for specificalized packet alteration. Until kernel 2.4.17
      it had two built-in chains: PREROUTING(for altering incoming packets before
      routing) and OUTPUT(for altering locally-generated packets before routing).
      Since kernel 2.4.18, three other built-in chains are also supported: INPUT(
      for packets coming into box itself), FORWARD(for altering packets being
      routed through the box), and POSTROUTING(for altering packets as they are
      about to go out).
    raw:
      This table is used mainly for configuring exemptions from connection tracking
      in combination with the NOTRACK target. It registers at the netfilter hooks
      with higher pripority and is thus called before ip_conntrack, or any other
      IP tables. It provides the following built-in chains: PREROUTING(for packets
      arriving via any network interface), OUTPUT(for packets generated by local
      processes).

Options
  The options that are recognized by iptables can be divided into several different
  groups.

  COMMANDS
    This options specify the desired action to perform. Only one of them can be
    specified on the command line unless otherwise stated below. For long versions
    of the command and option names, you need to use only enough letters to ensure
    that iptables can differentiate it from all other options.

    -A, --append chain rule-specification
      Append one or more rules to the end of the selected chain. When the source
      and/or destination names resolve to more than one address, a rule will be
      added for each possible address combination.
    -D, --delete chain rule-specification
    -D, --delete chain rulenum
      Delete one or more rules from the selected chain. There are two versions of
      this command: the rule can be specified as a number in the chain (starting
      at 1 for the first rule) or a rule to match.
    -I, --insert chain [rulenum] rule-specification
      Insert one or more rules in the selected chain as the given rule number. So,
      if the rule number is 1, the rule or rules are inserted at the head of the
      chain. This is also the default if no rule number is specified.
    -R, --replace chain rulenum rule-specification
      Replace a rule in the selected chain. If the source and/or destination names
      resolve to multiple addresses, the command will fail. Rules are numbered
      starting at 1.
    -L, --list [chain]
      List all rules in the selected chain. If no chain	is selected, all chains
      are listed. Like every other iptables command, it applies to the specified
      table (filter is the default), so NAT rules get listed by
        iptables -t nat -n -L
      Please note that it is often used with the -n option, in order to avoid
      long reverse lookups. It is legal to specify the -Z (zero) option as well,
      in which case the chain(s) will be atomically listed and zeroed. The exact
      output is affected by the other arguments given. The exact rules are
      suppressed until you use
        iptables -L -v
    -S, --list-rules [chain]
      Print all rules in the selected chain. If no chain is selected, all chains
      are printed like iptables-save. Like every other iptables command, it applies
      to the specified table (filter is the default).
    -F, --flush [chain]
      Flush the selected chain (all the chains in the table if none is given). This
      is equivalent to deleting all the rules one by one.
    -Z, --zero [chain [rulenum]]
      Zero the packet and byte counters in all chains, or only the given chain, or
      only the given rule in a chain. It is legal to specify the -L, --list (list)
      option as well, to see the counters immediately before they are cleared. (See
      above.)
    -N, --new-chain chain
      Create a new user-defined chain by the given name. There must be no target of
      that name already.
    -X, --delete-chain [chain]
      Delete the optional user-defined chain specified. There must be no references
      to the chain. If there are, you must delete or replace the referring rules
      before the chain can be deleted. The chain must be empty, i.e. not contain
      any rules. If no argument given, it will attempt to delete every non-builtin
      chain in the table.
    -P, --policy chain target
      Set the policy for the chain to the given target. See the section TARGETS for
      the legal targets. Only built-in (non-user-defined) chains can have policies,
      and neither built-in nor user-defined chains can be policy targets.
    -E, --rename-chain old-chain new-chain
      Rename the user specified chain to the user supplied name. This is cosmetic,
      and has no effect on the structure of the table.
    -h
      Help. Give a (currently very brief) description of the command syntax.

  PARAMETERS
    The following parameters make up a rule specification (as used in the add,
    delete, insert, replace and append command).
    [!] -p, --protocol protocol
      The protocol of the rule or of the packet to check. The specified protocol
      can be one of tcp, udp, udplite, icmp, esp, ah, sctp or all, or it can be
      a numeric value, representing one of these protocols or a different one.
      A protocol name from /etc/protocols is also allowed. A "!" argument before
      the protocol inverts the test. The number zero equivalent to all. Protocol
      all will match with all protocols and is taken as default when this option
      is omitted.
    [!] -s, --source address[/mask][,...]
      Source specification.

iptables [-t table] {-A|-D} chain rule-specification
