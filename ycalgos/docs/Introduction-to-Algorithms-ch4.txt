第4章 递归式

主方法:
	n=1:
		T(n) = Θ(1)
	n>1:
		T(n) = aT(n/b) + Θ(n)	(a≥1, b>1)

4.1 代换法
1). 猜测解的形式
2). 用数学归纳法找出使解真正有效的常数
练习
4.1-1 证明 T(n) = T(⌈n/2⌉) + 1的解为O(lgn)
证明:
	假定T(n) ≤ clgn, 则:
	T(n) = T(⌈n/2⌉) + 1
	     ≤ clg(⌈n/2⌉) + 1
	     ≤ clg((n+1)/2) + 1
	     = clg(n+1) - c + 1

	而
		clgn - (clg(n+1) - c + 1)
			= clgn - clg(n+1) + c - 1
			= clgn - clg(n+1) + clg2 - 1
			= clg(2n) - clg(n+1) - 1
			= clg(2n/(n+1)) - 1
			= clg(2-(2/(n+1))) - 1			(*)
	取n0 = 2, 则n ≥ n0 时有:
		clg(2-(2/(n+1))) ≥ clg(2-(2/3)) = clg(4/3)
	上式代入(*), 可得:
		clg(2-(2/(n+1))) - 1
			≥ clg(4/3) - 1
	当c>3时, 上式成立, 因此对于c=3, n0=2, n ≥ n0, 有:
		T(n) ≤ clgn
